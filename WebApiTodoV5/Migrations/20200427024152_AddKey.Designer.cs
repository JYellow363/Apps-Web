// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebApiTodo.Persistence;

namespace WebApiTodo.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200427024152_AddKey")]
    partial class AddKey
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("WebApiTodo.Model.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ClientNumber")
                        .IsRequired()
                        .HasColumnType("character varying(30)")
                        .HasMaxLength(30);

                    b.Property<int?>("Country_Id")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.HasKey("ClientId");

                    b.HasIndex("Country_Id");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            ClientId = 1,
                            ClientNumber = "1000000001",
                            Name = "Henry Antonio Mendoza Puerta"
                        },
                        new
                        {
                            ClientId = 2,
                            ClientNumber = "1000000002",
                            Name = "Juan Perez Mendez"
                        });
                });

            modelBuilder.Entity("WebApiTodo.Model.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.HasKey("CountryId");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            CountryId = 1,
                            Name = "Perú"
                        },
                        new
                        {
                            CountryId = 2,
                            Name = "Mexico"
                        });
                });

            modelBuilder.Entity("WebApiTodo.Model.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("ClientId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Iva")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("RegisteredAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Total")
                        .HasColumnType("numeric");

                    b.HasKey("OrderId");

                    b.HasIndex("ClientId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("WebApiTodo.Model.OrderDetail", b =>
                {
                    b.Property<int>("OrderDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<decimal>("Iva")
                        .HasColumnType("numeric");

                    b.Property<int>("OrderId")
                        .HasColumnType("integer");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Total")
                        .HasColumnType("numeric");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("numeric");

                    b.HasKey("OrderDetailId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetail");
                });

            modelBuilder.Entity("WebApiTodo.Model.OrderNumber", b =>
                {
                    b.Property<int>("Year")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Value")
                        .HasColumnType("integer");

                    b.HasKey("Year");

                    b.ToTable("OrderNumbers");

                    b.HasData(
                        new
                        {
                            Year = 2020,
                            Value = 0
                        });
                });

            modelBuilder.Entity("WebApiTodo.Model.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("State")
                        .HasColumnType("text");

                    b.Property<string>("Telephone")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Persons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "4630 Bridgewater Street ",
                            City = "AuburnCounty seat",
                            DateOfBirth = new DateTime(1992, 10, 15, 9, 28, 39, 0, DateTimeKind.Unspecified),
                            Email = "Michelle.Evans@microsoft.com",
                            FirstName = "Elizabeth",
                            LastName = "Kelly",
                            State = "Washington",
                            Telephone = "odd"
                        },
                        new
                        {
                            Id = 2,
                            Address = "5270 Snediker Avenue ",
                            City = "North Tonawanda",
                            DateOfBirth = new DateTime(1995, 6, 18, 4, 51, 39, 0, DateTimeKind.Unspecified),
                            Email = "Jordan.Rogers@rogers.ca",
                            FirstName = "Tyler",
                            LastName = "Reed",
                            State = "Oregon",
                            Telephone = "echo"
                        },
                        new
                        {
                            Id = 3,
                            Address = "6789 Waldorf Court ",
                            City = "Marfa",
                            DateOfBirth = new DateTime(1959, 9, 19, 22, 31, 46, 0, DateTimeKind.Unspecified),
                            Email = "Cody.Henderson@shaw.ca",
                            FirstName = "Olivia",
                            LastName = "Mitchell",
                            State = "South Carolina",
                            Telephone = "fap"
                        },
                        new
                        {
                            Id = 4,
                            Address = "2695 Seton Place ",
                            City = "Compton",
                            DateOfBirth = new DateTime(1956, 9, 17, 5, 36, 58, 0, DateTimeKind.Unspecified),
                            Email = "Aaliyah.Roberts@gmail.com",
                            FirstName = "Samantha",
                            LastName = "Hughes",
                            State = "U.S. Virgin Islands",
                            Telephone = "chips"
                        },
                        new
                        {
                            Id = 5,
                            Address = "4124 Cove Lane ",
                            City = "Tye",
                            DateOfBirth = new DateTime(1916, 2, 11, 18, 10, 1, 0, DateTimeKind.Unspecified),
                            Email = "Jesus.Wilson@att.com",
                            FirstName = "Brandon",
                            LastName = "Timms",
                            State = "Hawaii",
                            Telephone = "synth"
                        },
                        new
                        {
                            Id = 6,
                            Address = "905 Marine Avenue ",
                            City = "Woodlake",
                            DateOfBirth = new DateTime(1985, 12, 5, 1, 17, 18, 0, DateTimeKind.Unspecified),
                            Email = "Jessica.Iginla@shaw.ca",
                            FirstName = "Petronila",
                            LastName = "James",
                            State = "Delaware",
                            Telephone = "heard"
                        },
                        new
                        {
                            Id = 7,
                            Address = "6093 Clymer Street ",
                            City = "Palm Desert",
                            DateOfBirth = new DateTime(2013, 9, 26, 9, 5, 14, 0, DateTimeKind.Unspecified),
                            Email = "Sierra.Miller@telus.net",
                            FirstName = "Joel",
                            LastName = "Bryant",
                            State = "New Hampshire",
                            Telephone = "it"
                        },
                        new
                        {
                            Id = 8,
                            Address = "9827 Henry Street ",
                            City = "Norfolk County",
                            DateOfBirth = new DateTime(1956, 10, 26, 23, 48, 24, 0, DateTimeKind.Unspecified),
                            Email = "Christopher.Barnes@shaw.ca",
                            FirstName = "Destiny",
                            LastName = "Mc Vicar",
                            State = "North Carolina",
                            Telephone = "tofu"
                        },
                        new
                        {
                            Id = 9,
                            Address = "2783 Girard Street ",
                            City = "Lowry Crossing",
                            DateOfBirth = new DateTime(1911, 1, 26, 15, 42, 23, 0, DateTimeKind.Unspecified),
                            Email = "Luis.Howard@shaw.ca",
                            FirstName = "Morgan",
                            LastName = "Jenkins",
                            State = "Hawaii",
                            Telephone = "post-ironic"
                        },
                        new
                        {
                            Id = 10,
                            Address = "2091 Albemarle Road ",
                            City = "Shenandoah",
                            DateOfBirth = new DateTime(2000, 1, 16, 3, 25, 37, 0, DateTimeKind.Unspecified),
                            Email = "Jessica.Pearson@att.com",
                            FirstName = "Hunter",
                            LastName = "Turner",
                            State = "Louisiana",
                            Telephone = "sriracha"
                        },
                        new
                        {
                            Id = 11,
                            Address = "2640 Scholes Street ",
                            City = "Van Vleck",
                            DateOfBirth = new DateTime(1908, 12, 15, 8, 28, 22, 0, DateTimeKind.Unspecified),
                            Email = "Hailey.Yarobi@telus.net",
                            FirstName = "Haley",
                            LastName = "Lopez",
                            State = "Massachusetts",
                            Telephone = "organic"
                        },
                        new
                        {
                            Id = 12,
                            Address = "3912 Quentin Street ",
                            City = "Campbell River",
                            DateOfBirth = new DateTime(2005, 9, 4, 13, 55, 1, 0, DateTimeKind.Unspecified),
                            Email = "Breanna.Alexander@microsoft.com",
                            FirstName = "Danielle",
                            LastName = "Phillips",
                            State = "Louisiana",
                            Telephone = "selvage"
                        },
                        new
                        {
                            Id = 13,
                            Address = "2982 70th Street ",
                            City = "Roanoke",
                            DateOfBirth = new DateTime(1910, 3, 5, 18, 40, 24, 0, DateTimeKind.Unspecified),
                            Email = "Alexandria.Verstraete@att.com",
                            FirstName = "Stephanie",
                            LastName = "Pitt",
                            State = "American Samoa",
                            Telephone = "PBR"
                        },
                        new
                        {
                            Id = 14,
                            Address = "6458 Richardson Street ",
                            City = "Manhattan Beach",
                            DateOfBirth = new DateTime(1990, 12, 4, 17, 53, 29, 0, DateTimeKind.Unspecified),
                            Email = "Elijah.Perez@telus.net",
                            FirstName = "Caitlin",
                            LastName = "Brugger",
                            State = "New York",
                            Telephone = "life"
                        },
                        new
                        {
                            Id = 15,
                            Address = "1793 Lake Avenue ",
                            City = "Venus",
                            DateOfBirth = new DateTime(1932, 6, 17, 12, 45, 12, 0, DateTimeKind.Unspecified),
                            Email = "Dakota.Brooks@live.com",
                            FirstName = "Sarah",
                            LastName = "Cook",
                            State = "Ohio",
                            Telephone = "vice"
                        },
                        new
                        {
                            Id = 16,
                            Address = "8914 Banner 3rd Road ",
                            City = "Sand City",
                            DateOfBirth = new DateTime(1966, 12, 17, 17, 14, 13, 0, DateTimeKind.Unspecified),
                            Email = "Jacob.Bryant@live.com",
                            FirstName = "Peter",
                            LastName = "Washington",
                            State = "Maryland",
                            Telephone = "messenger"
                        },
                        new
                        {
                            Id = 17,
                            Address = "9054 Decatur Street ",
                            City = "Truckee",
                            DateOfBirth = new DateTime(1903, 12, 7, 7, 31, 17, 0, DateTimeKind.Unspecified),
                            Email = "Alexander.Wilson@telus.net",
                            FirstName = "Emelda",
                            LastName = "Cooper",
                            State = "Arkansas",
                            Telephone = "8-bit"
                        },
                        new
                        {
                            Id = 18,
                            Address = "3246 Fountain Avenue ",
                            City = "Shafter",
                            DateOfBirth = new DateTime(1955, 7, 20, 17, 0, 59, 0, DateTimeKind.Unspecified),
                            Email = "Sommer.Hughes@att.com",
                            FirstName = "Hannah",
                            LastName = "Sanders",
                            State = "Oklahoma",
                            Telephone = "them"
                        },
                        new
                        {
                            Id = 19,
                            Address = "1680 Covert Street ",
                            City = "Center",
                            DateOfBirth = new DateTime(1907, 11, 9, 9, 51, 26, 0, DateTimeKind.Unspecified),
                            Email = "Sarah.Daeninck@microsoft.com",
                            FirstName = "Mark",
                            LastName = "Chambers",
                            State = "New Mexico",
                            Telephone = "cred"
                        },
                        new
                        {
                            Id = 20,
                            Address = "1798 Stockholm Street ",
                            City = "Oshawa",
                            DateOfBirth = new DateTime(1989, 8, 27, 18, 1, 54, 0, DateTimeKind.Unspecified),
                            Email = "Trinity.Peterson@gmail.com",
                            FirstName = "Kelly",
                            LastName = "Henderson",
                            State = "Washington",
                            Telephone = "raw"
                        },
                        new
                        {
                            Id = 21,
                            Address = "7802 Willoughby Street ",
                            City = "Queen City",
                            DateOfBirth = new DateTime(1915, 3, 20, 11, 37, 36, 0, DateTimeKind.Unspecified),
                            Email = "Briana.Taylor@microsoft.com",
                            FirstName = "Olivia",
                            LastName = "Rogers",
                            State = "Mississippi",
                            Telephone = "haven't"
                        },
                        new
                        {
                            Id = 22,
                            Address = "9113 25th Avenue ",
                            City = "Saint-Pamphile",
                            DateOfBirth = new DateTime(2016, 12, 24, 5, 45, 34, 0, DateTimeKind.Unspecified),
                            Email = "Angelina.Diaz@gmx.com",
                            FirstName = "Gabrielle",
                            LastName = "Bell",
                            State = "Virginia",
                            Telephone = "semiotics"
                        },
                        new
                        {
                            Id = 23,
                            Address = "3315 Durland Place ",
                            City = "Prince George",
                            DateOfBirth = new DateTime(1948, 12, 12, 20, 27, 28, 0, DateTimeKind.Unspecified),
                            Email = "Vanessa.Rogers@shaw.ca",
                            FirstName = "Alexandra",
                            LastName = "Davis",
                            State = "Northern Mariana Islands",
                            Telephone = "they"
                        },
                        new
                        {
                            Id = 24,
                            Address = "7764 Williams Court ",
                            City = "Wills Point",
                            DateOfBirth = new DateTime(1927, 6, 23, 12, 35, 4, 0, DateTimeKind.Unspecified),
                            Email = "Jessica.Campbell@shaw.ca",
                            FirstName = "Lucas",
                            LastName = "Peterson",
                            State = "New Jersey",
                            Telephone = "wayfarers"
                        },
                        new
                        {
                            Id = 25,
                            Address = "8332 Clarendon Road ",
                            City = "Pitt Meadows",
                            DateOfBirth = new DateTime(1964, 9, 17, 6, 41, 28, 0, DateTimeKind.Unspecified),
                            Email = "Blake.Diaz@telus.net",
                            FirstName = "Richard",
                            LastName = "Reed",
                            State = "Virginia",
                            Telephone = "park"
                        },
                        new
                        {
                            Id = 26,
                            Address = "3340 Waterbury Street ",
                            City = "Emory",
                            DateOfBirth = new DateTime(1912, 3, 13, 12, 42, 51, 0, DateTimeKind.Unspecified),
                            Email = "Hailey.Butler@live.com",
                            FirstName = "Hailey",
                            LastName = "Wood",
                            State = "Nevada",
                            Telephone = "eye"
                        });
                });

            modelBuilder.Entity("WebApiTodo.Model.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("character varying(250)")
                        .HasMaxLength(250);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.HasKey("ProductId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("WebApiTodo.Model.Sale", b =>
                {
                    b.Property<int>("Year")
                        .HasColumnType("integer");

                    b.Property<int>("Month")
                        .HasColumnType("integer");

                    b.Property<decimal>("Iva")
                        .HasColumnType("numeric");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Total")
                        .HasColumnType("numeric");

                    b.HasKey("Year", "Month");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("WebApiTodo.Model.Warehouse", b =>
                {
                    b.Property<int>("WarehouseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.HasKey("WarehouseId");

                    b.ToTable("Warehouses");

                    b.HasData(
                        new
                        {
                            WarehouseId = 1,
                            Name = "Zona A"
                        },
                        new
                        {
                            WarehouseId = 2,
                            Name = "Zona B"
                        });
                });

            modelBuilder.Entity("WebApiTodo.Model.WarehouseProduct", b =>
                {
                    b.Property<int>("WarehouseProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("integer");

                    b.HasKey("WarehouseProductId");

                    b.HasIndex("ProductId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("WarehouseProduct");
                });

            modelBuilder.Entity("WebApiTodo.Model.Client", b =>
                {
                    b.HasOne("WebApiTodo.Model.Country", "Country")
                        .WithMany("Clients")
                        .HasForeignKey("Country_Id");
                });

            modelBuilder.Entity("WebApiTodo.Model.Order", b =>
                {
                    b.HasOne("WebApiTodo.Model.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApiTodo.Model.OrderDetail", b =>
                {
                    b.HasOne("WebApiTodo.Model.Order", "Order")
                        .WithMany("Items")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApiTodo.Model.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApiTodo.Model.WarehouseProduct", b =>
                {
                    b.HasOne("WebApiTodo.Model.Product", "Product")
                        .WithMany("Warehouses")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApiTodo.Model.Warehouse", "Warehouse")
                        .WithMany("Products")
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
